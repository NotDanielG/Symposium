05/04/17
Task done:
Researching a way to rotate objects. The method I found was using AffineTransform and to rotate
it by a certain number of degrees in radians. For example, I can rotate a square by 45 degrees.
Also making the basic screen, GUIapplication. Also make a new class with a "z-position" which
will determine the location of the object outside the standard 800x600 screen. Tomorrow's goal
is getting the new class to show up on the screen. 

05/05/17
Task done:
From Nockles, he gave me a method on how to make the side scroll work. Was helpful but the
g.drawImage() is a bit confusing. I have to look into the method and how changing the numbers
affect the image and the location of the image. Made a bunch of new classes like Platforms, or
EnemyAttack. Platforms are what you can stand on, so the collision should be that if the bottom
of the character is inside the platform with a positive velocity(moving downwards). EnemyAttack
would kind of like the feces in the previous game except with animation. Could add new stuff
so that the attacks' speed change based on surroundings.
05/06/17
Task done:
Research on other types of side scrollers. Decided on what to focus on first, which is all of
the smaller classes, like Enemy or Platform. Getting the different areas to load will probably
take a lot of time to debug. I can debug the minor classes easier. Tomorrow's task should be
finding a suitable sprite sheet. I got something in mind and I need to find how to utilize the
sprite sheet.
05/07/17
Task done:
Found a way to use a sprite sheet using the subImage method that returns a BufferedImage of a
portion. Problem is that I don't use BufferedImage, I use Image. I tried using BufferedImage
version of drawImage but it didn't show anything. After around an hour of researching and 
playing around, I figured out that BufferedImage is a subclass of Image, so you can 
cast it and be able to use it as an Image.
05/08/17
Task done:
Got the player to be able to move diagonally while they are pressing down two keys. However,
there seems to be a bug where the player is zooming off the screen after you hold one of the
buttons down. I suspect its due to the fact that the program is adding on too many of the same
command into the list. Tomorrow should just be debugging the problems with the player class.
05/09/17
Task done:
Finally debugged the issue. It had to do with the method continuously acting on the act() method
when its supposed to only happen once. To resolve this, I just made it so that when the 'W' gets
clicked, it acts but does not go into the ArrayList. Tomorrow's goal should be to do the
player's x velocity, and start on the platform class. 
05/11/17
Task done:
Resolved bug where you cannot call the getPlayer() method from enemies/platforms. Made some
fields static so that the other objects can call them in order to fulfill their function. 
Tomorrow should be finishing the platform class.
05/12/17
Task done:
returns a true, it will stop the player's y velocity and land them on the platform. This checks
if the y-velocity is negative as well. Next step should be to allow the player to be able to
"fall off" the platform by just walking off.
05/15/17
Task done:
Smoothed out the player class when its on the platform. Got the player to fall off the side of
platform once it walks off. Need to fix the right side of platform. It doesn't can't check the
platform's right side because it is set to null once it reaches out of bound.
05/16/17
Task done:
Did the basics for the Enemy and the EnemyAttack. Gave each of the class their own respective
shape.Debugged the player class so that the cube doesn't jitter around on the platform. All the
basic classes should be finished for now. Rest of the week should be figuring out the issue
with the platform sometimes having a NullExceptionError error and the side scroll.
05/17/17
Task done:
Got the platforms to move when the player moves. I can move the same equation from the platform
to the other classes of Enemy/EnemyAttack. Now should be putting everything into an ArrayList
and adding animation/frames.
05/22/17
Task done;
Got the player's X position on the screen to be stationary, but its "z" value will change once
you press a or d. Fixed the NullExceptionError that was occurring within the platform class. 
Added new two new ArrayList to store int values and a 2D array for the platforms. I am planning
for arrayPlatform[0] to hold all the platforms from z values 0-800, 1 would be from 801-1600,
etc. Tomorrow task is to actually implement the above statement or complete the PlayerAttack
class.
05/23/17
Task done:
Testing out the array of Platforms. This week should be figuring out how to load the areas. So
if you are in area 2, then Areas 1,2,3 should be loaded. Added some of the basic methods
and variables for the PlayerAttack class in the Player class and the ScreenGame class.
05/24/17
Task done:
Finished the loading areas beyond your screen, like the example shown above. I accounted for 
if you are if the first and last section. Tomorrow's task should be fixing the EnemyAttack
class.
05/25/17
Task done:
Got the areas to load depending on the currentSection, fixed the EnemyAttack issue where its
going towards the wrong side of the screen based on the Enemy's position relative to the
player's position. Tomorrow should be fixing the platforms that are removed, yet are still
'there'.
05/26/17
Task done:
Decided not to remove the platform thing, it should be fine as it is. Fixed the EnemyAttack
hit reg. Added new variables + their respective getters/setters for them. Currently doing the
playerattack, which is not appearing.
05/30/17
Task done:
Player now able to shoot out projectiles, that can hit the enemy. Both the enemy + player's
attack disappear on impact. However, deciding on what enemy it can hit is kind of buggy.
This week should be resolving the platform's placement and the issue mentioned above.